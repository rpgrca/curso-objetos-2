name: Build NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [Patterns-Portfolio-Exercise-WithAccountImplementation, PortfolioTreePrinter-Exercise, PortfolioTreePrinter-Exercise-WithPortfolioImpl, ElevatorExercise, ElevatorConsole-Exercise]
        dotnet-version: [ "9.x" ]

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Restore packages
      run: dotnet restore CSharp/C2-${{ matrix.project }}/${{ matrix.project }}.sln

    - name: Install Coverlet
      run: dotnet tool install --global coverlet.console

    - name: Build ${{ matrix.project }}
      run: dotnet build --configuration Debug --no-restore CSharp/C2-${{ matrix.project }}/${{ matrix.project }}.sln

    - name: Testing ${{ matrix.project }}
      run: coverlet CSharp/C2-${{ matrix.project }}/${{ matrix.project }}.UnitTests/bin/Debug/net9/${{ matrix.project }}.UnitTests.dll --target "dotnet" --targetargs "test CSharp/C2-${{ matrix.project }}/${{ matrix.project }}.UnitTests/${{ matrix.project }}.UnitTests.csproj --no-build --verbosity quiet" --format OpenCover --output ${{ matrix.project }}.coverage.xml
           done

    - name: Upload coverage to CodeCov
      run: bash <(curl -s https://codecov.io/bash)

    - name: Archive code coverage results
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report
        path: ./*.coverage.xml

